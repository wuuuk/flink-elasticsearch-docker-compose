version: "2"
services:

  zookeeper:
    image: debezium/zookeeper:1.2
    ports:
      - ${zookeeper_port}:2181
    networks:
      - elasticsearchNet

  kafka:
    image: debezium/kafka:1.2
    ports:
      - ${kafka_port}:9092
    depends_on:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - elasticsearchNet

  mongodb:
    image: debezium/example-mongodb:1.2
    hostname: mongodb
    ports:
      - ${mongo_port}:27017
    environment:
      - MONGODB_USER=debezium
      - MONGODB_PASSWORD=dbz
    networks:
      - elasticsearchNet

  mysql:
    image: debezium/example-mysql:1.2
    ports:
      - ${mysql_port}:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
      - TZ=Asia/Shanghai
    volumes:
      - ${data_path}/mysql_data:/var/lib/mysql  # mysql数据文件映射到家目录的workspaces/docker_data/mysql_data
    networks:
      - elasticsearchNet

  connect:
    image: debezium/connect:1.2
    ports:
      - 8083:8083
    depends_on:
      - kafka
      - mysql
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - elasticsearchNet

  jobmanager:
    build: ./flink-image
    image: wuuuk/flink  # build后镜像名，默认标签latest
    ports:
      - ${flink_port}:8081
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ${data_path}/checkpoint:/opt/flink/checkpoint  # checkpoint数据文件映射到家目录workspaces/docker_data/checkpoint, 同时代码指定checkpoint file uri为/opt/flink/checkpoint/xx
    networks:
      - elasticsearchNet

  taskmanager:
    image: wuuuk/flink
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ${data_path}/checkpoint:/opt/flink/checkpoint  # checkpoint数据文件映射到家目录workspaces/docker_data/checkpoint, 同时代码指定checkpoint file uri为/opt/flink/checkpoint/xx
    networks:
      - elasticsearchNet

  sql-client:
    build: ./client-image
    image: wuuuk/sql-client
    depends_on:
      - kafka
      - jobmanager
      - elasticsearch
    environment:
      FLINK_JOBMANAGER_HOST: jobmanager
      ZOOKEEPER_CONNECT: zookeeper
      KAFKA_BOOTSTRAP: kafka
      ES_HOST: elasticsearch
    networks:
      - elasticsearchNet

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    environment:
      - cluster.name=docker-cluster
      # - bootstrap.memory_lock=true  # *******锁定物理内存地址，此处设置会导致启动失败。原因是分配的内存不够*******
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - discovery.type=single-node
    ports:
      - ${elasticsearch_port}:9200
      - 9300:9300
    volumes:
      - ${data_path}/es_data:/usr/share/elasticsearch/data  # es索引 数据文件映射到家目录的workspaces/docker_data/es_data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
           memory: 2G
        reservations:
           memory: 200M
    networks:
      - elasticsearchNet
    tty: true

  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    ports:
      - ${kibana_port}:5601
    networks:
      - elasticsearchNet

networks:
  elasticsearchNet:
    driver: bridge
