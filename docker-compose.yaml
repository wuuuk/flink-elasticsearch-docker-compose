version: "2"
services:
# zookeeper
  zookeeper:
    image: debezium/zookeeper:1.2
    ports:
      - "2181:2181"
    networks:
      - elasticsearchNet
# kafka
  kafka:
    image: debezium/kafka:1.2
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - elasticsearchNet
# mongodb
  mongodb:
    image: debezium/example-mongodb:1.2
    hostname: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGODB_USER=debezium
      - MONGODB_PASSWORD=dbz
    networks:
      - elasticsearchNet
# mysql
  mysql:
    image: debezium/example-mysql:1.2
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
      - TZ=Asia/Shanghai
    volumes:
      - /Users/mac/workspace/etl/mysql:/var/lib/mysql
    networks:
      - elasticsearchNet
# 连接器
  connect:
    image: debezium/connect:1.2
    ports:
      - 8083:8083
    depends_on:
      - kafka
      - mysql
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - elasticsearchNet
# flink sql
  sql-client:
    build: ./client-image
    image: demo/debezium-flink-sql
    depends_on:
      - kafka
      - jobmanager
      - elasticsearch
    environment:
      FLINK_JOBMANAGER_HOST: jobmanager
      ZOOKEEPER_CONNECT: zookeeper
      KAFKA_BOOTSTRAP: kafka
      ES_HOST: elasticsearch
    networks:
      - elasticsearchNet
# flink作业管理器
  jobmanager:
    image: flink:1.11.1-scala_2.11
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    networks:
      - elasticsearchNet
# flink任务管理器
  taskmanager:
    image: flink:1.11.1-scala_2.11
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    networks:
      - elasticsearchNet
# elasticsearch 7.7目前最新
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    environment:
      - cluster.name=docker-cluster
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - elasticsearchNet
    deploy: # 设置elasticsearch运行配置，如果小于此配置可能会宕机
      resources:
        limits:
           cpus: '2'
           memory: 2G
        reservations:
           cpus: '0.5'
           memory: 200M
# kibana: elasticsearch可视化工具
  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    ports:
      - "5601:5601"
    networks:
      - elasticsearchNet
# 设置网络
networks:
  elasticsearchNet:
    driver: bridge
