version: "2"
services:

  zookeeper:
    image: debezium/zookeeper:1.2
    ports:
      - "2181:2181"
    networks:
      - elasticsearchNet

  kafka:
    image: debezium/kafka:1.2
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - elasticsearchNet

  mongodb:
    image: debezium/example-mongodb:1.2
    hostname: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGODB_USER=debezium
      - MONGODB_PASSWORD=dbz
    networks:
      - elasticsearchNet

  mysql:
    image: debezium/example-mysql:1.2
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
      - TZ=Asia/Shanghai
    volumes:
      - /Users/lintao/workspaces/etl/data/mysql:/var/lib/mysql
      #- /Users/lintao/workspaces/etl/docker-config/mysql:/etc/mysql
    networks:
      - elasticsearchNet

  connect:
    image: debezium/connect:1.2
    ports:
      - 8083:8083
    depends_on:
      - kafka
      - mysql
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - elasticsearchNet

  sql-client:
    build: ./client-image
    image: demo/debezium-flink-sql
    depends_on:
      - kafka
      - jobmanager
      - elasticsearch
    environment:
      FLINK_JOBMANAGER_HOST: jobmanager
      ZOOKEEPER_CONNECT: zookeeper
      KAFKA_BOOTSTRAP: kafka
      ES_HOST: elasticsearch
    networks:
      - elasticsearchNet

  jobmanager:
    build: ./flink-image
    image: demo/flink
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    networks:
      - elasticsearchNet

  taskmanager:
    image: demo/flink
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    networks:
      - elasticsearchNet

  elasticsearch:
    # image: elasticsearch:7.7.0
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    environment:
      - cluster.name=docker-cluster
      # - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
           memory: 2G
        reservations:
           memory: 200M
    networks:
      - elasticsearchNet
        
  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    ports:
      - "5601:5601"
    networks:
      - elasticsearchNet

networks:
  elasticsearchNet:
    driver: bridge
